name: otlp

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Install Rust toolchain
        run: rustup default nightly

      - name: Install cargo-hack
        run: cargo install cargo-hack

      - name: All
        working-directory: ./emitter/otlp
        run: cargo test --all-features

      - name: Powerset
        working-directory: ./emitter/otlp
        run: cargo hack test --feature-powerset --lib

      - name: Minimal versions
        working-directory: ./emitter/otlp
        run: cargo hack test --feature-powerset --lib -Z minimal-versions

  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Install Rust toolchain
        run: rustup default nightly

      - name: Install certutil
        run: apt-get update && apt-get install -y libnss3-tools

      - name: Get otelcol
        run: wget -O otelcol.deb https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.107.0/otelcol_0.107.0_linux_amd64.deb

      - name: Install otelcol
        run: sudo dpkg -i ./otelcol.deb

      - name: Get mkcert
        working-directory: ./emitter/otlp/test/integration
        run: wget -O mkcert https://github.com/FiloSottile/mkcert/releases/download/v1.4.4/mkcert-v1.4.4-linux-amd64 && chmod +x mkcert

      - name: Configure mkcert
        working-directory: ./emitter/otlp/test/integration
        run: ./mkcert -install && ./mkcert 127.0.0.1 localhost && ls

      - name: Integration Test
        working-directory: ./emitter/otlp/test/integration
        run: cargo run

      - name: Throughput Test
        working-directory: ./emitter/otlp/test/throughput
        run: cargo run --release
